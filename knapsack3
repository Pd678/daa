def fractional_knapsack():
    weights = [10, 20, 30]
    values = [60, 100, 120]
    capacity = 50
    res = 0

    # Pair : [Weight, Value] and sort by value/weight ratio
    for pair in sorted(zip(weights, values), key=lambda x: x[1] / x[0], reverse=True):
        if capacity <= 0:  # Capacity completed - Bag fully filled
            break

        if pair[0] > capacity:  # If item's weight is greater than remaining capacity
            res += int(capacity * (pair[1] / pair[0]))  # Take fraction of the item
            capacity = 0
        else:  # Take the whole item
            res += pair[1]
            capacity -= pair[0]

    print(res)


if __name__ == "__main__":
    fractional_knapsack()
