def solve_knapsack():
    val = [50, 100, 150, 200]  # value array
    wt = [8, 16, 32, 40]       # weight array
    W = 64                      # total capacity
    n = len(val) - 1            # last index

    def knapsack(W, n):  # (Remaining Weight, Number of items considered)
        # base case
        if n < 0 or W <= 0:
            return 0

        # Higher weight than available capacity
        if wt[n] > W:
            return knapsack(W, n - 1)
        else:
            # max(including current item, not including current item)
            return max(val[n] + knapsack(W - wt[n], n - 1), knapsack(W, n - 1))

    print(knapsack(W, n))


if __name__ == "__main__":
    solve_knapsack()
